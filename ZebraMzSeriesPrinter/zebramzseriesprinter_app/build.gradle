/**************************************************************************************************
 GRADLE CONFIG
 *************************************************************************************************/

if ((new File(gradle.local)).exists()) {
    apply from: gradle.local
} else {
    apply from: gradle.remote
}

applicationScripts.each {
    apply from: it
}

apply plugin: 'com.android.application'

com.android.ddmlib.DdmPreferences.setTimeOut(60000)

android {
    // The following are set in the common.gradle file
    compileSdkVersion(compileVersion)
    buildToolsVersion(buildTools)

    defaultConfig {
        applicationId('org.opendatakit.sensors.drivers.zebra.bt')
        minSdkVersion(minVersion)
        targetSdkVersion(targetVersion)
        versionCode(releaseVersionCode)
        versionName(versionCodeName + " ALPHA")
    }

    flavorDimensions "stage", "testing"

    productFlavors {
        demo {
            dimension 'stage'
        }

        master {
            dimension 'stage'
        }

        snapshot {
            dimension 'stage'
        }

        basic {
            dimension 'testing'
        }

        uitest {
            minSdkVersion(uitestMinSDK)
            dimension 'testing'
        }
    }

    signingConfigs {
        release {
            if (shouldSign) {
                storeFile file(signStoreFilePath)
                storePassword signStorePass
                keyAlias signKeyAlias
                keyPassword signKeyPass
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled(minify)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            if (shouldSign) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            debuggable(true)
            testCoverageEnabled(testCoverage) // Allows AndroidTest JaCoCo reports to be generated
        }
    }

    packagingOptions {
        // Pick first occurrence of any files that cause conflicts, as defined in common.gradle
        packageList.each {
            pickFirst it
        }
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor(0, 'seconds')
        cacheChangingModulesFor(0, 'seconds')
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.preference:preference:1.0.0'

    if (sensorsInterfaceProjectPath.exists() && gradle.useLocal) { // Local project is favoured
        implementation project(sensorsInterfaceProjectName)
    } else {
        demoImplementation(group: groupId, name: sensorsInterfaceSnapshotArtifactName, classifier: snapshotRelease,
                version: latestVersion, ext: 'aar')
        masterImplementation(group: groupId, name: sensorsInterfaceSnapshotArtifactName, classifier: snapshotRelease,
                version: latestVersion, ext: 'aar')
        snapshotImplementation(group: groupId, name: sensorsInterfaceSnapshotArtifactName,
                classifier: snapshotRelease, version: latestVersion, ext: 'aar')
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'junit:junit:4.12'
}
